# Configuration for graphql-code-generator

overwrite: true

schema:
  - "./src/server/apollo/typeDefs.ts":
      noRequire: true

generates:
  # Generate types for the resolvers (for the backend)
  ./src/server/apollo/resolvers/__types__.ts:
    plugins:
      - "typescript"
      - "typescript-resolvers"
    config:
      contextType: "../ResolverContext#ResolverContext"
      immutableTypes: true
      maybeValue: T | null | undefined
      mappers:
        Talk: "../../pretalx#PretalxAPITalk"
        Speaker: "../../pretalx#PretalxAPISpeaker"
        Room: "../../pretalx#PretalxAPIRoom"

  # Generate types for the GraphQL objects for the frontend
  ./src/apollo/__generated__/types.ts:
    plugins:
      - typescript

  # Generate fully typed React hooks corresponding to the written operations
  # (i.e., queries/mutations) for the frontend
  ./src/:
    documents: "./src/components/**/*.graphql"
    preset: near-operation-file
    presetConfig:
      extension: ".generated.tsx"
      baseTypesPath: "apollo/__generated__/types.ts"
    plugins:
      - typescript-operations
      - typescript-react-apollo
    config:
      immutableTypes: true
      reactApolloVersion: 3
      withComponent: false
      withHOC: false
      withHooks: true

hooks:
  afterAllFileWrite:
    - prettier --write
